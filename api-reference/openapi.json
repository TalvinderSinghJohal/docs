{
  "openapi": "3.1.0",
  "info": {
    "title": "AltrumAI API",
    "description": "\n# Introduction\n\n## What is AltrumAI?\n\nAltrumAI aims to empower organisations with ethical generative AI by offering a platform that integrates seamlessly with existing business applications. Our solution ensures compliance with data ethics standards, enabling safe and responsible AI deployment.\n\n## Getting Started\n\nThe functionalities of the AltrumAI platform are accessible via a suite of robust APIs. These APIs provide flexibility and customisation for enterprise-specific use cases.\n\nTo integrate with AltrumAI, follow these steps:\n\n### 1. Obtain a Project API Key\nRequest platform access via our website: [AltrumAI](https://www.altrum.ai).\n\n**Include this header in every API request:**\n```shell\nProject-API-Key: PROJECT_API_KEY\n```\n\n### 2. Use the SDKs\nUse our official **Python** or **Java** SDKs. (Provided during setup onboarding.)\n\n1. Install and import the SDK\n2. Initialise the client\n3. Make authenticated API calls\n\n### 3. Fetch Data\nUse the SDKs or raw HTTP to retrieve analysis results.\n\nFull endpoint list and schemas are provided below.\n",
    "contact": {
      "name": "Contact Support",
      "email": "support@altrum.ai"
    },
    "version": "nova.1.1.10",
    "x-logo": {
      "url": "/static/logo.svg"
    }
  },
  "servers": [
    {
      "url": "http://localhost:8000",
      "description": "Development"
    },
    {
      "url": "https://api.altrum.ai",
      "description": "Production"
    }
  ],
  "security": [
    {
      "bearerAuth": []
    }
  ],
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer"
      }
    }
  },
  "paths": {
    "/v1/openai/chat/completions": {
      "post": {
        "tags": ["OpenAI Proxy"],
        "summary": "Chat Completions",
        "description": "Acts as an OpenAI Proxy for chat completions.",
        "operationId": "chatOpenaiCompletion",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Bearer token for OpenAI"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ModelRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ModelResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Status401"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Status500"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "ModelRequest": {
        "type": "object",
        "required": ["model", "messages"],
        "properties": {
          "model": {
            "type": "string",
            "description": "The model used for chat completion"
          },
          "messages": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Message"
            }
          },
          "stream": {
            "type": "boolean",
            "default": false
          }
        }
      },
      "ModelResponse": {
        "type": "object",
        "properties": {
          "choices": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "message": {
                  "$ref": "#/components/schemas/Message"
                }
              }
            }
          }
        }
      },
      "Message": {
        "type": "object",
        "required": ["role", "content"],
        "properties": {
          "role": {
            "type": "string",
            "enum": ["system", "user", "assistant"]
          },
          "content": {
            "type": "string"
          }
        }
      },
      "Status401": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "default": false
          },
          "message": {
            "type": "string",
            "default": "Invalid Project API Key"
          }
        }
      },
      "Status500": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "default": false
          },
          "message": {
            "type": "string",
            "default": "Error occurred."
          }
        }
      }
    }
  }
}
